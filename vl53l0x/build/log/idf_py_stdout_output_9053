[1/9] Performing build step for 'bootloader'
[1/1] cd /mnt/c/Users/Antonio/Documents/GitHub/pruebas_tfg/vl53l0x/build/bootloader/esp-idf/esptool_py && /home/antonio/.espressif/python_env/idf5.2_py3.12_env/bin/python /home/antonio/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /mnt/c/Users/Antonio/Documents/GitHub/pruebas_tfg/vl53l0x/build/bootloader/bootloader.bin
Bootloader binary size 0x6850 bytes. 0x7b0 bytes (7%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable vl53l0x_project.elf
[8/9] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /mnt/c/Users/Antonio/Documents/GitHub/pruebas_tfg/vl53l0x/build/vl53l0x_project.bin
[9/9] cd /mnt/c/Users/Antonio/Documents/GitHub/pruebas_tfg/vl53l0x/build/esp-idf/esptool_py && /home/antonio/.espressif/python_env/idf5.2_py3.12_env/bin/python /home/antonio/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /mnt/c/Users/Antonio/Documents/GitHub/pruebas_tfg/vl53l0x/build/partition_table/partition-table.bin /mnt/c/Users/Antonio/Documents/GitHub/pruebas_tfg/vl53l0x/build/vl53l0x_project.bin
vl53l0x_project.bin binary size 0x37f20 bytes. Smallest app partition is 0x100000 bytes. 0xc80e0 bytes (78%) free.
